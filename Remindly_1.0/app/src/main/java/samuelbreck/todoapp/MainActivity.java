package samuelbreck.todoapp;import android.content.Context;import android.content.Intent;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.os.Bundle;import android.support.v7.app.AppCompatActivity;import android.support.v7.widget.Toolbar;import android.view.Menu;import android.view.MenuItem;import android.view.View;import android.widget.AdapterView;import android.widget.ArrayAdapter;import android.widget.EditText;import android.widget.ListView;import org.apache.commons.io.FileUtils;import java.io.File;import java.io.IOException;import java.util.ArrayList;import java.util.List;public class MainActivity extends AppCompatActivity {    ArrayList<String> items;    ArrayAdapter<String> itemsAdapter;    ListView lvItems;    String taskName = "";    String taskNote = ""    ArrayList<Task> arrayOfTasks;    TaskAdapter adapter;    ListView listView;    private final int REQUEST_CODE = 20;    @Override    protected void onCreate(Bundle savedInstanceState) {        super.onCreate(savedInstanceState);        setContentView(R.layout.activity_main);        Toolbar toolbar = (Toolbar) findViewById(R.id.toolbar);        setSupportActionBar(toolbar);        readItems();//        lvItems = (ListView)findViewById(R.id.lvItems);//        items = new ArrayList<>();//        items.add("Task 1");//        items.add("Task 2");//        itemsAdapter = new ArrayAdapter<>(this, android.R.layout.simple_expandable_list_item_1, items);//        lvItems.setAdapter(itemsAdapter);        // Construct the data source        arrayOfTasks = new ArrayList<Task>();        // Create the adapter to convert the array to views        // Custom adapter in TaskAdapter.java        adapter = new TaskAdapter(this, arrayOfTasks);        // Attach the adapter to a ListView        listView = (ListView) findViewById(R.id.lvItems);        // Create sample data        Task newUser = new Task();        newUser.taskName = "Clean the dishes";        newUser.dueDate = "Tues, June 14";        newUser.priority = "high";        newUser.taskNote = "mom told you to";        arrayOfTasks.add(newUser);        Task newUser2 = new Task();        newUser2.taskName = "Check the mail";        newUser2.dueDate = "Wed, June 15";        newUser2.priority = "medium";        newUser2.taskNote = "dad told you to";        arrayOfTasks.add(newUser2);        listView.setAdapter(adapter);        setupListViewListener();        /*        Database currently has not been fully implemented        // Get singleton instance of database        PostsDatabaseHelper databaseHelper = PostsDatabaseHelper.getInstance(this);        // Add sample post to the database        databaseHelper.addTask(newUser);        databaseHelper.addTask(newUser2);        List<Task> tasks = databaseHelper.getAllTasks();        for (Task task : tasks) {            adapter.add(task);        }        */    }    @Override    public boolean onCreateOptionsMenu(Menu menu) {        // Inflate the menu; this adds items to the action bar if it is present.        getMenuInflater().inflate(R.menu.activity_menu, menu);        return true;    }    @Override    public boolean onOptionsItemSelected(MenuItem item) {        // Handle action bar item clicks here. The action bar will        // automatically handle clicks on the Home/Up button, so long        // as you specify a parent activity in AndroidManifest.xml.        int id = item.getItemId();        //noinspection SimplifiableIfStatement        if (id == R.id.action_settings) {            return true;        }        return super.onOptionsItemSelected(item);    }    public void onAddItem(View v) {        // this is the new add item button        EditText etNewItem = (EditText) findViewById(R.id.etNewItem);        String itemText = etNewItem.getText().toString();        itemsAdapter.add(itemText);        etNewItem.setText(""); // resets the etNewItem        writeItems();    }    public void setupListViewListener() {        lvItems.setOnItemClickListener(new AdapterView.OnItemClickListener() {            @Override            public void onItemClick(AdapterView<?> adapter, View item, int pos, long id) {                // creates the intent                Intent intention = new Intent(MainActivity.this, EditActivity.class);                intention.putExtra("pos", pos);                intention.putExtra("taskName", arrayOfTasks.get(pos).taskName);                intention.putExtra("taskDate", arrayOfTasks.get(pos).dueDate);                intention.putExtra("taskPriority", arrayOfTasks.get(pos).priority);                intention.putExtra("taskNote", arrayOfTasks.get(pos).taskNote);                // launches the edit item screen                startActivityForResult(intention,REQUEST_CODE);            }        });        lvItems.setOnItemLongClickListener(new AdapterView.OnItemLongClickListener() {            @Override            public boolean onItemLongClick(AdapterView<?> adapter, View item, int pos, long id) {                items.remove(pos);                itemsAdapter.notifyDataSetChanged();                writeItems();                return true;            }        });    }    // ActivityOne.java, time to handle the result of the sub-activity    @Override    protected void onActivityResult(int requestCode, int resultCode, Intent data) {        // REQUEST_CODE is defined above        if (resultCode == RESULT_OK && requestCode == REQUEST_CODE) {            // Extract name value from result extras            taskName = data.getExtras().getString("taskName");            taskNote = data.getExtras().getString("taskNote");            int pos = data.getExtras().getInt("pos", 0);            items.set(pos, edit);            // refreshes the adapter connected to the data set            itemsAdapter.notifyDataSetChanged();            writeItems();            // resets the edit            taskName = "";            taskNote = "";        }    }    private void readItems () {        File filesDir = getFilesDir();        File todoFile = new File(filesDir, "todo.txt");        try {            items = new ArrayList<String>(FileUtils.readLines(todoFile));        }        catch (IOException e ) {            items = new ArrayList<String>();        }    }    private void writeItems() {        File filesDir = getFilesDir();        File todoFile = new File(filesDir, "todo.txt");        try {            FileUtils.writeLines(todoFile, items);        }        catch (IOException e ) {            e.printStackTrace();        }    }    @Override    public void onStart() {        super.onStart();    }    @Override    public void onStop() {        super.onStop();    }}